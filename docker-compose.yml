services:
  postgres:
    container_name: postgres-booking-room
    image: postgres
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: bookingRoom_db
    volumes:
      - postgres:/data/postgres
    ports:
      - 5432:5432
    networks:
      - spring-booking
    restart: unless-stopped

  booking-api:
    container_name: booking-api
    image: booking/booking:1.0.0
    ports:
      - 8088:8088
    networks:
      - spring-booking
    depends_on:
      - postgres
  booking-frontend:
    container_name: booking-frontend
    image: booking-ui/booking-ui:1.0.0
    ports:
      - 8080:80
    networks:
      - spring-booking
    depends_on:
      - booking-api
  mail-dev:
    container_name: mail-dev-booking
    image: maildev/maildev
    ports:
      - 1080:1080
      - 1025:1025
    networks:
      - spring-booking
networks:
  spring-booking:
    driver: bridge

volumes:
  postgres:
    driver: local
